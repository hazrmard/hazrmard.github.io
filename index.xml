<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ibrahim Ahmed</title>
    <link>http://iahmed.me/index.xml</link>
    <description>Recent content on Ibrahim Ahmed</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Ibrahim Ahmed</copyright>
    <lastBuildDate>Mon, 06 Feb 2017 10:07:58 -0600</lastBuildDate>
    <atom:link href="http://iahmed.me/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Optimizing static sites with hugo</title>
      <link>http://iahmed.me/post/optimizing-static-sites-with-hugo/</link>
      <pubDate>Mon, 06 Feb 2017 10:07:58 -0600</pubDate>
      
      <guid>http://iahmed.me/post/optimizing-static-sites-with-hugo/</guid>
      <description>&lt;p&gt;According to &lt;a href=&#34;http://httparchive.org/trends.php&#34;&gt;httparchive&lt;/a&gt; the average size
of a web page in 2016 was around 2.5MB. Now this may not seem a lot in this age
where the internet is the primary media delivery platform - but it is worth
noting that most web pages serve text as their primary content. Looking at the
report sheds light on what constitutes an average web page:&lt;/p&gt;

&lt;p&gt;The HTML content takes up around 50-60kB. Images, understandably, make up the
biggest chunk with ~1.6MB. Around another ~200kB are taken up by CSS and Font
files. What is surprising to me is that the next biggest chunk, at above 400kB,
is JavaScript.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://iahmed.me/img/posts/optimizing-static-sites-with-hugo/chart.png&#34;&gt;
&lt;/figure&gt;

&lt;p&gt;The portion I want to go after is &lt;code&gt;JavaScript&lt;/code&gt;. Granted that JavaScript is
indispensable to web development. However in excess it can weigh everything
down. Particularly in cases when it - instead of &lt;code&gt;CSS&lt;/code&gt; -  is used to add
responsivity to a website. In my experience &lt;code&gt;jQuery&lt;/code&gt; is the biggest culprit
of unnecessary bloat. But I digress.&lt;/p&gt;

&lt;p&gt;While I was building this website using &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; I realized
that I would need additional JavaScript libraries for highlighting code and
rendering math. And these libraries take up a ton of space. This:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increases the bandwidth cost for the user, and&lt;/li&gt;
&lt;li&gt;Increases loading times which make browsing experience clunky.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://iahmed.me/img/posts/optimizing-static-sites-with-hugo/network_stats.png&#34;&gt;
    &lt;figcaption&gt;An overview of network traffic for a webpage on this site using
        MathJax library&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Above is network traffic for a page on this site that uses 3rd party JS libraries
to render equations. Around 200/218kB of network traffic is for that one library.
This may seem a trivial amount of data but I believe that any optimization is
good optimization (&lt;em&gt;in production especially&lt;/em&gt;). So I harnessed all the flexibility
a static site can offer. When I now build my site, only pages that render
equations or contain code request external libraries. Thus different pages on my
site have different - but the leanest possible - network traffic signatures.&lt;/p&gt;

&lt;p&gt;How did I do it? When building sites using Hugo, for each post I can define
variables that Hugo can use while rendering a page template into HTML. These
variables are called &lt;em&gt;front matter&lt;/em&gt; in Hugo-speak. For example, &lt;em&gt;front matter&lt;/em&gt;
for this page looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;+++
categories = [&amp;quot;Developer&amp;quot;, &amp;quot;Meta&amp;quot;]
date = &amp;quot;2017-02-03T10:07:58-06:00&amp;quot;
hasequations = false
title = &amp;quot;Optimizing static sites with hugo&amp;quot;
hascode = true
isexternal = false
series = []
description = &amp;quot;&amp;quot;
tags = [&amp;quot;Javascript&amp;quot;, &amp;quot;Hugo&amp;quot;]
draft = true
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section for the HTML template looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;{{if .IsPage}}
    {{if .Params.hascode}}
        &amp;lt;script src=&amp;quot;https://V_V_LONG_PATH_TO_LIBRARY/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;https://EVEN_LONGER_PATH.min.css&amp;quot;&amp;gt;
        &amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
    {{end}}
    {{if .Params.hasequations}}
        &amp;lt;script type=&amp;quot;text/javascript&amp;quot; async
            src=&amp;quot;https://DECENT_LENGTH_PATH/MathJax.js?config=TeX-AMS_CHTML&amp;quot;&amp;gt;
        &amp;lt;/script&amp;gt;
    {{end}}
{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So now, only when I set &lt;code&gt;hasequations&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; does the page load
&lt;a href=&#34;https://www.mathjax.org/&#34;&gt;&lt;code&gt;MathJax&lt;/code&gt;&lt;/a&gt;. Same with &lt;code&gt;hascode&lt;/code&gt; and
&lt;a href=&#34;https://highlightjs.org/&#34;&gt;&lt;code&gt;Highlight.js&lt;/code&gt;&lt;/a&gt;. This speeds up my load times and
frees up the generous CDNs from unnecessary traffic. All it took was a few lines.
Win-Win.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is cold the new hot?</title>
      <link>http://iahmed.me/post/is-cold-the-new-hot/</link>
      <pubDate>Tue, 31 Jan 2017 11:00:25 -0600</pubDate>
      
      <guid>http://iahmed.me/post/is-cold-the-new-hot/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This article was originally published on
&lt;a href=&#34;astroibrahim.wordpress.com&#34;&gt;astroibrahim&lt;/a&gt; on April 17, 2013.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;A few days back, a friend shared an
&lt;a href=&#34;http://www.nature.com/news/quantum-gas-goes-below-absolute-zero-1.12146&#34;&gt;article&lt;/a&gt; with me. It talked of
how scientists had managed to achieve temperatures below absolute
zero. Does it mean that temperature has to be redefined? Has our
understanding of thermodynamics been flawed for the past hundred
years. No, it turns out. It is all a matter of semantics.&lt;/p&gt;

&lt;p&gt;Absolute Zero. This is the temperature at which a particle has
the minimum possible energy. The energy is NOT zero because that
would violate the Heisenberg uncertainty principle (that you
cannot know the energy and its duration with absolute certainty).
However that zero-state energy is a quantum quantity, so for all
intents and purposes, the particle itself appears stationary.
Classically, it is impossible to go below absolute zero because
for all the matter that we know of, it will never have negative
energy (because the zero state energy prevents energy from going
past zero and into the negative).&lt;/p&gt;

&lt;p&gt;Therefore when you talk of temperatures below absolute zero, and
you know that there is nothing wrong with absolute zero, then
logically there must be something going on with “Temperature”.
The layperson will call temperature the hotness of something.
Some one more well versed in science will call it the average
kinetic energy of the particles. All of these definitions are
correct in the same way Newton’s gravity is correct i.e. it works
for our observations. But in order to really understand
temperature, you need to understand entropy.&lt;/p&gt;

&lt;p&gt;Entropy in a sense is the amount of disorder in a system. Imagine
making a mound of sand on a table. Now shake the table. The sand
particles will spread out as they roll down from the mound.
Because the particles are now spread out, the entropy of the
system has increased. The farther a particle is from the original
position of the mound, the more effectively it has harnessed the
energy you gave the system by vibrating the table. If the table
was infinitely expansive, the particles would continue spreading
out and absorbing the energy you provide and increasing the
entropy of the system.&lt;/p&gt;

&lt;p&gt;In a system with infinite states, energy and disorder have a
positive relationship.
In a system with infinite states, energy and disorder have a
positive relationship.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://iahmed.me/img/posts/is-cold-the-new-hot/temp_infinite.png&#34;&gt;
    &lt;figcaption&gt;In a system with infinite states, energy and
    disorder have a positive relationship.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This is temperature, the ratio of energy required to the change
in entropy. The greater the energy required for the same increase
in entropy, the greater will be the temperature.&lt;/p&gt;

&lt;p&gt;But there is a catch: what if you provide more energy to the
system but the disorder (entropy) decreases instead. Is it
possible to shake the table and make the sand particles more
ordered? If it is, then that would mean that the temperature of
the system is negative because the change in energy is positive,
but the change in entropy is negative, so the ratio (which
represents temperature) is negative. Imagine that the table is
not infinite. Instead it has little walls on the edges. As you
shake the table, the sand particles start to spread out (they
gain energy, and increase entropy). The temperature increases.
But there comes a point when they reach the edges. Then they
start to accumulate again. The more you shake the table, the
greater is the particle accumulation on the edges. At that point,
an increase in energy of the system is in fact decreasing its
disorder. Thus the temperature has become negative.&lt;/p&gt;

&lt;p&gt;In a system with finite states, energy and disorder develop a
negative relationship.
In a system with finite states, energy and disorder develop a
negative relationship.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://iahmed.me/img/posts/is-cold-the-new-hot/temp_finite.png&#34;&gt;
    &lt;figcaption&gt;In a system with finite states, energy and  
    disorder develop a negative relationship.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;That is exactly what the scientists mentioned in the article did.
They trapped the molecules using lasers and magnetic fields, so
that after absorbing certain amount of energy, the barriers
created by the magnetic fields and lasers would cause particles
to accumulate around the same energies. In the classical sense,
the particles were hotter because they had a greater energy, but
since the disorder in the system was lessened, their temperature
was negative i.e. below absolute zero.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gravitational Slingshots</title>
      <link>http://iahmed.me/post/gravitational-slingshots/</link>
      <pubDate>Tue, 31 Jan 2017 10:48:32 -0600</pubDate>
      
      <guid>http://iahmed.me/post/gravitational-slingshots/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This article was originally published on
&lt;a href=&#34;astroibrahim.wordpress.com&#34;&gt;astroibrahim&lt;/a&gt; on Apr 10, 2013.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I always wondered why doesn’t the sun slow space probes down when
they are leaving the Earth for outer planets. Isn’t there a risk
that the probe might change its trajectory and fall into the sun?
There is. You see, the more distant the space probe gets from the
Sun, the more potential energy it gains. However, energy must be
conserved at all costs. Therefore the probe loses its Kinetic
energy (and therefore its speed) in order to get away from the
sun. It is the same as when you throw a rock up into the air.&lt;/p&gt;

&lt;p&gt;But there comes a point, as with the rock, when the probe loses
all of its kinetic energy. At that time it has reached as far
away from the sun as it can. Yes, you could add thrusters to make
sure the probe continues its journey. But the extra weight and
inefficiency of propellants known to us make it an unsuitable
alternative.&lt;/p&gt;

&lt;p&gt;Enter the Gravitational Slingshot! Nature’s way of compensating
us (very marginally) for all the millions of years we’ve been
dragged through the mud in the name of evolution. Through this
method, space probes go into a partial orbit around a planet and
emerge on the other side with a greater velocity. “No!”, some
might say, because it is a violation of conservation of energy.
Intuitively it seems that way, but it is all a matter of
relativity.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://iahmed.me/img/posts/gravitational-slingshots/slingshot.png&#34;&gt;
&lt;/figure&gt;

&lt;p&gt;Imagine there is a probe approaching a planet with a velocity
‘u’. To an observer on the planet, the apparent velocity of the
probe’s approach will be ‘V+u’, where ‘V’ is the planet’s and ‘u’
is the probe’s heliocentric velocity, i.e. velocity relative to
the Sun. It will go into orbit at that speed. Now, when it comes
out of orbit on the other side, it is still moving with a
velocity ‘V+u’ relative to the planet’s surface. But the planet
is also moving in the same direction at velocity ‘V’. So the
final velocity as the probe leaves orbit will be ‘V+(V+u)’. Of
course, some of that velocity will be reduced due to the planet’s
potential, but in the end it will still be greater than the
probe’s initial velocity.&lt;/p&gt;

&lt;p&gt;If you look at what happened overall, ignoring how it happened,
the probe approaches a moving planet at a certain velocity and
“bounces off” at a higher velocity. It is just like when you
throw a ball at the face of a moving train, the ball bounces off
at a higher velocity. Now, the ball changes its momentum (first
going in one direction, then another) and transfers that change
to the train to ensure conservation. But the train is
comparatively so massive that we do not notice the minuscule
change in its velocity. That’s the same with planets and probes.&lt;/p&gt;

&lt;p&gt;The effective increment in the probe’s velocity is due to the
orbited body’s velocity relative to the Sun (analogously, the
change in velocity of the rebounding ball depends on the train’s
relative velocity to the ground). Of course, the Sun’s velocity
relative to itself is zero. Therefore ‘V’ will be zero. So there
will be no gravitational slingshot from the Sun (towards planets
in its orbit) even though it is the most massive body in the
solar system; just like there will be no increment in the
velocity of the ball when you throw it at the ground.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Urdown</title>
      <link>http://iahmed.me/project/urdown/</link>
      <pubDate>Tue, 01 Nov 2016 01:00:00 -0500</pubDate>
      
      <guid>http://iahmed.me/project/urdown/</guid>
      <description></description>
    </item>
    
    <item>
      <title>gobol</title>
      <link>http://iahmed.me/project/gobol/</link>
      <pubDate>Sat, 01 Oct 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/gobol/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Testing code with sensitive data</title>
      <link>http://iahmed.me/post/2016-09-05-testing-code-with-sensitive-data/</link>
      <pubDate>Tue, 06 Sep 2016 02:01:26 +0000</pubDate>
      
      <guid>http://iahmed.me/post/2016-09-05-testing-code-with-sensitive-data/</guid>
      <description>&lt;p&gt;I recently renewed work on my first ever &lt;a href=&#34;https://github.com/hazrmard/imgurPCA&#34;&gt;github project&lt;/a&gt;. Over the course of a whole year when that project was dormant, I&amp;#8217;d learned some new tricks. I now try to focus on writing tests for my projects. It is immensely convenient when I add features here  and there and need to check the whole code for errors.&lt;/p&gt;

&lt;p class=&#34;&#34;&gt;
  Anyways, my project requires API keys to imgur.com. However I do not want to hard-code them into my &lt;em&gt;&lt;a href=&#34;https://github.com/hazrmard/imgurPCA/blob/master/test.py&#34;&gt;test.py&lt;/a&gt;&lt;/em&gt; file. But I also do not want to manually provide keys every time I run tests. So what do I do?
&lt;/p&gt;

&lt;p class=&#34;&#34;&gt;
  If you develop on Windows, have you heard of our lord and savior Powershell? Powershell is a scripting environment (like cmd on steroids) akin to bash on linux. I simply wrote a PS script that substitutes keys into &lt;em&gt;test.py. &lt;/em&gt;Then it runs the file, and before exiting removes the API keys again. To illustrate:
&lt;/p&gt;

&lt;pre class=&#34;toolbar-overlay:false lang:python decode:true&#34; title=&#34;test.py in default state&#34;&gt;&lt;code&gt;CLIENT_ID = &#39;&#39;
CLIENT_SECRET = &#39;&#39;

# my tests&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My script that looks for &lt;code&gt;CLIENT_ID&lt;/code&gt; and &lt;code&gt;CLIENT_SECRET&lt;/code&gt; and inserts API keys:&lt;/p&gt;

&lt;pre class=&#34;toolbar-overlay:false lang:ps decode:true &#34; title=&#34;A powershell script to add API keys&#34;&gt;&lt;code&gt;$id = &#34;SOME_ID&#34;
$secret = &#34;SOME_SECRET&#34;
$file = &#34;test.py&#34;

$content = Get-Content $file
$content -replace &#34;CLIENT_ID = &#39;&#39;&#34;, &#34;CLIENT_ID = &#39;$id&#39;&#34; |
         % {$_.replace(&#34;CLIENT_SECRET = &#39;&#39;&#34;, &#34;CLIENT_SECRET = &#39;$secret&#39;&#34;)} |
         Set-Content $file

python $file

 $content -replace &#34;CLIENT_ID = &#39;$id&#39;&#34;, &#34;CLIENT_ID = &#39;&#39;&#34; |
          % {$_.replace(&#34;CLIENT_SECRET = &#39;$secret&#39;&#34;, &#34;CLIENT_SECRET = &#39;&#39;&#34;)} |
          Set-Content $file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Immediately after the code is run (&lt;code&gt;python $file&lt;/code&gt;). The file is restored to its initial state so I can upload it to github safely.&lt;/p&gt;

&lt;p&gt;If you already have some sensitive information uploaded to github or in your git history, check out &lt;a href=&#34;https://rtyley.github.io/bfg-repo-cleaner/&#34;&gt;BFG&lt;/a&gt;. It is a tool that can purge files/replace text from git history permanently.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A case study in choosing algorithms</title>
      <link>http://iahmed.me/post/2016-08-13-a-case-study-in-choosing-algorithms/</link>
      <pubDate>Sun, 14 Aug 2016 03:29:23 +0000</pubDate>
      
      <guid>http://iahmed.me/post/2016-08-13-a-case-study-in-choosing-algorithms/</guid>
      <description>&lt;p&gt;This past year, I have been crunching data from &lt;a href=&#34;https://github.com/hazrmard/DarkMatterHalos&#34;&gt;dark matter simulations&lt;/a&gt;. Data size can get pretty large when it comes to scientific computing. As I write this post, I have a script running on 3.8 TB (that&amp;#8217;s right &amp;#8211; 3,700 gigabytes) of cosmic particles. At these levels one starts thinking about parallelizing computations. And therein lay my dilemma and a soon to be learned lesson.&lt;/p&gt;

&lt;p&gt;Around the time I began working on this, I was taking an algorithms course. And we had just learned about the &lt;a href=&#34;https://en.wikipedia.org/wiki/Bin_packing_problem&#34;&gt;bin packing problem&lt;/a&gt;. It involves figuring out the best way to fit an arbitrary number of objects with different sizes into a set of bins so the least amount of bins are used. And it is a hard problem to figure out fast. To get around the difficulty, computer scientists come up with &lt;a href=&#34;https://en.wikipedia.org/wiki/Heuristic_(computer_science)&#34;&gt;heuristics&lt;/a&gt;: shortcuts that give a &amp;#8220;good enough&amp;#8221; answer. And one heuristic is the First-fit algorithm. Essentially: find the fist bin with enough space, dump the object in, repeat.&lt;/p&gt;

&lt;p&gt;Now, this bin packing problem was similar to my parallelization challenge. I had to divide my data into multiple processes to be computed independently. And so, with the enthusiasm that comes only with applying newfound knowledge, I &lt;a href=&#34;https://github.com/hazrmard/DarkMatterHalos#multi-core-processing&#34;&gt;wrote some code&lt;/a&gt;. It read the data, assigned them &amp;#8220;size&amp;#8221; based on the big-O complexity of my calculations, and binned them for each process. Sweet, right?&lt;/p&gt;

&lt;p&gt;Not so fast. I was noticing that my processes were still taking different times to finish. The disparity was more than I was happy with. There could be several reasons. One, big-O complexity rarely ever translates to proportionate running times as it ignores factors such as OS background. Two, I was not accounting for file i/o and lower-order big-O complexities while &amp;#8220;sizing&amp;#8221; data. In practice vs. theory, these things matter. So what could I do?&lt;/p&gt;

&lt;p&gt;My solution in the end was quite simple, and my biggest lesson with parallel computing. Instead of pre-partitioning data for each process, I kept it all in a single pool. As soon as a process was free, it took one package from the pool and did its thing. The processes naturally divvied up the work. All was well! Now this might be parallel 101 for many, but I was so caught up in the fancy new algorithm I had learned that I did not pause to see if a plebeian approach, so to speak, may work better.&lt;/p&gt;

&lt;p&gt;Now, as my pizza arrives and my script chugs through terabytes of data, I can watch Netflix in peace knowing that my pet processes are making the best of their time.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AdEmbargo</title>
      <link>http://iahmed.me/project/AdEmbargo/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/AdEmbargo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>imgurPCA</title>
      <link>http://iahmed.me/project/imgurPCA/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/imgurPCA/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DarkMatterHalos</title>
      <link>http://iahmed.me/project/DarkMatterHalos/</link>
      <pubDate>Fri, 01 Jul 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/DarkMatterHalos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Markov Chains – Random Text Generation</title>
      <link>http://iahmed.me/post/2016-04-29-markov-chains/</link>
      <pubDate>Fri, 29 Apr 2016 23:23:16 +0000</pubDate>
      
      <guid>http://iahmed.me/post/2016-04-29-markov-chains/</guid>
      <description>&lt;p&gt;This semester I am taking a course in &lt;a href=&#34;http://sc3260s16.github.io/&#34;&gt;High Performance Computing&lt;/a&gt; where I get to work with multi-core systems like computing clusters and graphics cards. For my final project I decided to develop a random text generator and see if I could speed it up.&lt;/p&gt;

&lt;p&gt;A popular method of generating random text (that is grammatically correct) is using &lt;strong&gt;Markov chains&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;what-is-a-markov-chain&#34;&gt;What is a Markov chain?&lt;/h3&gt;

&lt;p&gt;A Markov chain is a state machine. The next output depends on the current state. So if you were generating random text, the word to follow would depend on the current word(s). A way to model real speech would be to parse some text and to make a table of prefixes and suffixes. So for example, for the prefix &amp;#8220;how are you&amp;#8221;, the possible suffixes might be &amp;#8220;feeling?&amp;#8221;, &amp;#8220;doing?&amp;#8221;, &amp;#8220;able&amp;#8221; depending on the context.&lt;figure id=&#34;attachment_33&#34; style=&#34;width: 300px&#34; class=&#34;wp-caption aligncenter&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-medium wp-image-33&#34; src=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_parsing-300x76.png&#34; alt=&#34;Parsing text: prefixes of 2 words and suffix of 1 word.&#34; width=&#34;300&#34; height=&#34;76&#34; srcset=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_parsing-300x76.png 300w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_parsing-768x195.png 768w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_parsing-1024x260.png 1024w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_parsing.png 1381w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;figcaption class=&#34;wp-caption-text&#34;&gt;Parsing text: prefixes of 2 words and suffix of 1 word.&lt;/figcaption&gt;&lt;/figure&gt; &lt;figure id=&#34;attachment_34&#34; style=&#34;width: 300px&#34; class=&#34;wp-caption aligncenter&#34;&gt;&lt;img class=&#34;size-medium wp-image-34&#34; src=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_table-300x105.png&#34; alt=&#34;A table of prefixes and possible suffixes.&#34; width=&#34;300&#34; height=&#34;105&#34; srcset=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_table-300x105.png 300w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_table-768x269.png 768w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_table-1024x358.png 1024w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_table.png 1235w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;figcaption class=&#34;wp-caption-text&#34;&gt;A table of prefixes and possible suffixes.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Once a table is built, you can randomly walk over the table to generate text that more or less follows the syntax of the input text. Let&amp;#8217;s say you were making a Markov chain of order 2 i.e. prefixes of 2 words. First you&amp;#8217;d select a random prefix from the table. That prefix would have a list of possible suffixes. You randomly choose one. Now you have three words printed out: the prefix (2 words) and the suffix (1 word). To find out the next word, you simply create a new prefix consisting of the last word in the previous prefix and your current suffix. So if you chose &amp;#8220;The quick&amp;#8221; as a prefix, and you got &amp;#8220;brown&amp;#8221; as a suffix, the next prefix would be &amp;#8220;quick brown&amp;#8221;. That would yield another word from which you&amp;#8217;d make another prefix and so on.&lt;/p&gt;

&lt;h3 id=&#34;speeding-up-the-process&#34;&gt;Speeding up the process&lt;/h3&gt;

&lt;p&gt;One way to speed up the process is to use multiple threads to create the chain from a body of text. Each thread parses a certain section of the input, creates a table, and merges it with the universal Markov chain.&lt;figure id=&#34;attachment_35&#34; style=&#34;width: 660px&#34; class=&#34;wp-caption aligncenter&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;wp-image-35 size-large&#34; src=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_parallel-1024x489.png&#34; alt=&#34;Parallel Markov chain generation.&#34; width=&#34;660&#34; height=&#34;315&#34; srcset=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_parallel-1024x489.png 1024w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_parallel-300x143.png 300w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_parallel-768x367.png 768w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_parallel.png 1465w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;figcaption class=&#34;wp-caption-text&#34;&gt;Parallel Markov chain generation.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;However chain generation is only one part of the process which includes other tasks that happen serially. And given that chain generation takes linear time with respect to the input, I was not expecting a dramatic speed-up by parallelizing code.&lt;figure id=&#34;attachment_36&#34; style=&#34;width: 300px&#34; class=&#34;wp-caption aligncenter&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;wp-image-36 size-medium&#34; src=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_process-300x280.png&#34; alt=&#34;markov_process&#34; width=&#34;300&#34; height=&#34;280&#34; srcset=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_process-300x280.png 300w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_process.png 753w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;figcaption class=&#34;wp-caption-text&#34;&gt;The whole random text generation process.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;I implemented the process in my first ever complete C++ project. I used p_threads for parallel implementation. I could have used multiple processes, but the cost of inter-process communication was too much for O(n) process, I thought. I tested out my code on War and Peace by Leo Tolstoy with different prefix lengths and threads. The speed-ups were decent but not spectacular:&lt;figure id=&#34;attachment_37&#34; style=&#34;width: 660px&#34; class=&#34;wp-caption aligncenter&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-large wp-image-37&#34; src=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_speedup-1024x615.png&#34; alt=&#34;Speed-up vs. threads for different orders (prefix sizes).&#34; width=&#34;660&#34; height=&#34;396&#34; srcset=&#34;http://iahmed.me/img/wp-content/uploads/2016/04/markov_speedup-1024x615.png 1024w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_speedup-300x180.png 300w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_speedup-768x461.png 768w, http://iahmed.me/img/wp-content/uploads/2016/04/markov_speedup.png 1242w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;figcaption class=&#34;wp-caption-text&#34;&gt;Speed-up vs. threads for different orders (prefix sizes).&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;The source code can be found &lt;a href=&#34;https://github.com/hazrmard/Markovia&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SatTrack</title>
      <link>http://iahmed.me/project/SatTrack/</link>
      <pubDate>Fri, 01 Apr 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/SatTrack/</guid>
      <description>&lt;p&gt;SatTrack is the software-side of my senior engineering project at Vanderbilt
University. I led a team of 4 students to design a software-defined radio system
that can track and receive scientific data from cube satellites.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://iahmed.me/img/projects/SatTrack_poster.png&#34;&gt;
    &lt;figcaption&gt;Poster for the project.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;SatTrack&lt;/em&gt; provides the front/back end of the entire interface. The software
can be run from any system that supports Python. It calculates satellite position
in real-time based on current location. There is a companion module on an Arduino
which controls antenna servos using those coordinates.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SatTrack&lt;/em&gt; can be used in a python script for flexibility. It comes with a
very convenient graphical interface hosted on a browser that can be served on a
local network. So you can control the whole system from your smartphone from a
distance.&lt;/p&gt;

&lt;p&gt;A demo of the interface on a computer:

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/AYTlRSY0r2I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The interface on a mobile device:&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/QayhI7FTyIs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Starting Android Development</title>
      <link>http://iahmed.me/post/2016-03-04-starting-android-development/</link>
      <pubDate>Sat, 05 Mar 2016 03:55:04 +0000</pubDate>
      
      <guid>http://iahmed.me/post/2016-03-04-starting-android-development/</guid>
      <description>&lt;p&gt;I have always been fascinated with mobile app development. Over the last couple of years in college, I made a few attempts to get started with Android applications. I watched tutorial series, reading blogs, attending introductory workshops. Nope. Nothing seemed to stick. What was wrong?&lt;/p&gt;

&lt;p&gt;I realized what the problem was: All tutorials began in the same way, more or less. Wherever I looked, I saw the face of my old frenemy: Hello World. I&amp;#8217;d gotten so used to writing hello world code for everything I learned: C, Java, Python etc., that repeating the same thing, albeit differently, got monotonous.&lt;/p&gt;

&lt;p&gt;So, one weekend I sat down with an idea for an app. I was going to make a simple fact generator that takes content from reddit. I had been toying with the idea for quite a while, so I was invested in the endeavor. The next 24 hours were spent looking over reddit&amp;#8217;s API documentation, the android developer website, and Stack Overflow. It was a grueling process. Occasionally I&amp;#8217;d hit a dead end and take a break out of frustration. But I did not relent. Come what may, there would be an android application written by my hands before the weekend was over. And behold, there was:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://iahmed.me/img/wp-content/til.png&#34; alt=&#34;TIL - icon&#34; /&gt;&lt;br /&gt;
Where I had expected to use some simple android APIs, I ended up things from using local storage to background threads. While that may be trivial to a good android developer, using those APIs on my very first app was very exciting to me. My very first app was of some utility, and that was motivation enough for me to start learning more.&lt;/p&gt;

&lt;p&gt;So my advice: pick an idea that you like. Reserve a day or two to work on it. And harness the power of internet search.&lt;/p&gt;

&lt;p&gt;My app is available at: &lt;a href=&#34;https://github.com/hazrmard/TIL&#34; target=&#34;_blank&#34;&gt;github.com/hazrmard/TIL&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TIL</title>
      <link>http://iahmed.me/project/TIL/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/TIL/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ng-Résumé</title>
      <link>http://iahmed.me/project/ng-Resume/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 -0600</pubDate>
      
      <guid>http://iahmed.me/project/ng-Resume/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>